<!DOCTYPE html>
<meta charset="utf-8">
<style>

body {
  font: 12px sans-serif;
}

.y.axisRight text {
    fill: orange;
}

.y.axisLeft text {
    fill: black;
}


.axis path,
.axis line {
  fill: none;
  stroke: #000;
  shape-rendering: crispEdges;
}

.d3-tip{
  line-height: 1;
  font-weight: bold;
  padding: 12px;
  background: #000;
  color: steelblue;
  border-radius: 2px;
}

.d3-tip:after {
  box-sizing: border-box;
  display: inline;
  font-size: 10px;
  width: 100%;
  line-height: 1;
  color: black;
  content:"\25BC";
  position: absolute;
  text-align: center;

}

/* Style northward tooltips differently */
.d3-tip.n:after {
  margin: -1px 0 0 0;
  top: 100%;
  left: 0;

}

.rect1 {
  fill: #aad;
}

.rect2{
  fill: #556;
}

.x.axis path {
  display: none;
}

form {
  position: absolute;
  left: 10px;
  top: 10px;
}


</style>
<body>
<script src="http://d3js.org/d3.v3.min.js"></script>
<script src="http://labratrevenge.com/d3-tip/javascripts/d3.tip.v0.6.3.js"></script>

<form>
  <label><input type="radio" name="mode" value="2010" checked > 2010</label> 
  <label><input type="radio" name="mode" value="2011" > 2011</label>
  <label><input type="radio" name="mode" value="2012" > 2012</label>
  <label><input type="radio" name="mode" value="2013" > 2013</label>
  <input onclick = "ButtonChange(this)" type = "button" id ="GapButton" value="Comparison of percentages"></input>
</form>
<script>

var data_2010 = [
{"SYSTEM_NAME":"Atlanta Public Schools",
"black_total": 0.807776109,
"gifted_total":0.521075581,
"black_gap":0.286700528},

{"SYSTEM_NAME":"Buford City",
"black_total": 0.138528139,
"gifted_total":0.025568182,
"black_gap":0.286700528},

{"SYSTEM_NAME":"Cherokee County",
"black_total": 0.069355356,
"gifted_total":0.025225225,
"black_gap":0.286700528},

{"SYSTEM_NAME":"Clayton County",
"black_total": 0.721180996,
"gifted_total":0.641369048},

{"SYSTEM_NAME":"Cobb County",
"black_total": 0.31152851,
"gifted_total":0.115574436},

{"SYSTEM_NAME":"Decatur City",
"black_total": 0.339034588,
"gifted_total":0.095818815},

{"SYSTEM_NAME":"DeKalb County",
"black_total": 0.721604578,
"gifted_total":0.475733634},

{"SYSTEM_NAME":"Douglas County",
"black_total": 0.475266378,
"gifted_total":0.31161025},

{"SYSTEM_NAME":"Fayette County",
"black_total": 0.227673367,
"gifted_total":0.09950361},

{"SYSTEM_NAME":"Forsyth County",
"black_total": 0.024195919,
"gifted_total":0.008933086},

{"SYSTEM_NAME":"Fulton County",
"black_total": 0.418474298,
"gifted_total":0.150644142},

{"SYSTEM_NAME":"Gwinnett County",
"black_total": 0.279337524,
"gifted_total":0.132466604},

{"SYSTEM_NAME":"Henry County",
"black_total": 0.450703526,
"gifted_total":0.271347678},

{"SYSTEM_NAME":"Marietta City",
"black_total": 0.452160085,
"gifted_total":0.208504801},

{"SYSTEM_NAME":"Rockdale County",
"black_total": 0.587196614,
"gifted_total":0.374331551},

]

var data_2011 = [
{"SYSTEM_NAME":"Atlanta Public Schools",
"black_total": 0.793406229,
"gifted_total":0.512226239},

{"SYSTEM_NAME":"Buford City",
"black_total": 0.129734848,
"gifted_total":0.032258065},

{"SYSTEM_NAME":"Cherokee County",
"black_total": 0.068900762,
"gifted_total":0.025678383},

{"SYSTEM_NAME":"Clayton County",
"black_total": 0.718409224,
"gifted_total":0.62745098},

{"SYSTEM_NAME":"Cobb County",
"black_total": 0.313005171,
"gifted_total":0.122502419},

{"SYSTEM_NAME":"Decatur City",
"black_total": 0.316955017,
"gifted_total":0.100961538},

{"SYSTEM_NAME":"DeKalb County",
"black_total": 0.705621806,
"gifted_total":0.472248846},

{"SYSTEM_NAME":"Douglas County",
"black_total": 0.483022419,
"gifted_total":0.308134521},

{"SYSTEM_NAME":"Fayette County",
"black_total": 0.231847317,
"gifted_total":0.102375297},

{"SYSTEM_NAME":"Forsyth County",
"black_total": 0.02527695,
"gifted_total":0.008435005},

{"SYSTEM_NAME":"Fulton County",
"black_total": 0.417729786,
"gifted_total":0.155289607},

{"SYSTEM_NAME":"Gwinnett County",
"black_total": 0.288943371,
"gifted_total":0.142556061},

{"SYSTEM_NAME":"Henry County",
"black_total": 0.458483755,
"gifted_total":0.299421009},

{"SYSTEM_NAME":"Marietta City",
"black_total": 0.455079122,
"gifted_total":0.202020202},

{"SYSTEM_NAME":"Rockdale County",
"black_total": 0.600812359,
"gifted_total":0.418243243},

]

var data_2012 = [
{"SYSTEM_NAME":"Atlanta Public Schools",
"black_total": 0.779412991,
"gifted_total":0.470448705},

{"SYSTEM_NAME":"Buford City",
"black_total": 0.138596491,
"gifted_total":0.04},

{"SYSTEM_NAME":"Cherokee County",
"black_total": 0.069008451,
"gifted_total":0.027096774},

{"SYSTEM_NAME":"Clayton County",
"black_total": 0.717138336,
"gifted_total":0.632022472},

{"SYSTEM_NAME":"Cobb County",
"black_total": 0.312720131,
"gifted_total":0.127187343},

{"SYSTEM_NAME":"Decatur City",
"black_total": 0.29320025,
"gifted_total":0.105405405},

{"SYSTEM_NAME":"DeKalb County",
"black_total": 0.692291151,
"gifted_total":0.469812109},

{"SYSTEM_NAME":"Douglas County",
"black_total": 0.488757637,
"gifted_total":0.312584574},

{"SYSTEM_NAME":"Fayette County",
"black_total": 0.238737176,
"gifted_total":0.10866373},

{"SYSTEM_NAME":"Forsyth County",
"black_total": 0.025786572,
"gifted_total":0.00982375},

{"SYSTEM_NAME":"Fulton County",
"black_total": 0.416088673,
"gifted_total":0.163682864},

{"SYSTEM_NAME":"Gwinnett County",
"black_total": 0.299899093,
"gifted_total":0.155939801},

{"SYSTEM_NAME":"Henry County",
"black_total": 0.465394764,
"gifted_total":0.310882731},

{"SYSTEM_NAME":"Marietta City",
"black_total": 0.444262913,
"gifted_total":0.221467391},

{"SYSTEM_NAME":"Rockdale County",
"black_total": 0.610890756,
"gifted_total":0.461441214},

]

var data_2013 = [
{"SYSTEM_NAME":"Atlanta Public Schools",
"black_total": 0.766883985,
"gifted_total":0.443494777},

{"SYSTEM_NAME":"Buford City",
"black_total": 0.129689175,
"gifted_total":0.049180328},

{"SYSTEM_NAME":"Cherokee County",
"black_total": 0.068999635,
"gifted_total":0.02993688},

{"SYSTEM_NAME":"Clayton County",
"black_total": 0.710796635,
"gifted_total":0.632475661},

{"SYSTEM_NAME":"Cobb County",
"black_total": 0.314394928,
"gifted_total":0.129884671},

{"SYSTEM_NAME":"Decatur City",
"black_total": 0.279812724,
"gifted_total":0.107448107},

{"SYSTEM_NAME":"DeKalb County",
"black_total": 0.679320912,
"gifted_total":0.456027386},

{"SYSTEM_NAME":"Douglas County",
"black_total": 0.499399568,
"gifted_total":0.327403015},

{"SYSTEM_NAME":"Fayette County",
"black_total": 0.2452,
"gifted_total":0.117972129},

{"SYSTEM_NAME":"Forsyth County",
"black_total": 0.02717293,
"gifted_total":0.011257818},

{"SYSTEM_NAME":"Fulton County",
"black_total": 0.420213813,
"gifted_total":0.168164105},

{"SYSTEM_NAME":"Gwinnett County",
"black_total": 0.303921988,
"gifted_total":0.16323763},

{"SYSTEM_NAME":"Henry County",
"black_total": 0.475021468,
"gifted_total":0.311451226},

{"SYSTEM_NAME":"Marietta City",
"black_total": 0.435947158,
"gifted_total":0.223325062},

{"SYSTEM_NAME":"Rockdale County",
"black_total": 0.620303492,
"gifted_total":0.476334951},

]

var margin = {top: 80, right: 80, bottom: 80, left: 80},
    width = 1000 - margin.left - margin.right,
    height = 500 - margin.top - margin.bottom;

var x = d3.scale.ordinal()
    .rangeRoundBands([0, width], .1);

var y0 = d3.scale.linear().domain([300, 1100]).range([height, 0]),
    y1 = d3.scale.linear().domain([300, 1100]).range([height, 0]);

var xAxis = d3.svg.axis()
    .scale(x)
    .orient("bottom");

var formatter = d3.format(".0%");    

// create left yAxis
var yAxisLeft = d3.svg.axis().scale(y0).ticks(5).tickFormat(formatter).orient("left");
// create right yAxis
var yAxisRight = d3.svg.axis().scale(y1).ticks(5).tickFormat(formatter).orient("right");



var tip = d3.tip()
          .attr("class","d3-tip")
          .offset([-10,0])
          .html(function(d){
            return "<span style = 'color:white'> Percentage: " + formatter(d.gifted_total) + "</span>";
          });


var tip1 = d3.tip()
          .attr("class","d3-tip")
          .offset([-10,0])
          .html(function(d){
            return "<span style = 'color:white'> Percentage: " + formatter(d.black_total) + "</span>";
          });

var tip2 = d3.tip()
          .attr("class","d3-tip")
          .offset([-10,0])
          .html(function(d){
            return "<span style = 'color:white'> Percentage: " + formatter(d.black_total - d.gifted_total) + "</span>";
          });          

var svg = d3.select("body").append("svg")
    .attr("width", width + margin.left + margin.right)
    .attr("height", height + margin.top + margin.bottom)
    .append("g")
    .attr("class", "graph")
    .attr("transform", "translate(" + margin.left + "," + margin.top + ")");

    svg.call(tip);
    svg.call(tip1);    

  x.domain(data_2010.map(function(d) { return d.SYSTEM_NAME; }));
  y0.domain([0, 0.9]);
  y1.domain([0, 0.9]);


  svg.append("g")
     .attr("class", "x axis")
     .attr("transform", "translate(0," + height + ")")
     .call(xAxis)
     .selectAll("text")
        .style("text-anchor","end")
        .attr("dx","-.4em")
        .attr("dy",".15em")
        .attr("transform",function(d){
          return "rotate(-30)"
        });

  svg.append("g")
    .attr("class", "y axis axisLeft")
    .attr("transform", "translate(0,0)")
    .call(yAxisLeft)
  .append("text")
    .attr("transform","rotate(-90)")
    .attr("y", 6)
    .attr("dy", ".71em")
    .style("text-anchor", "end")
    .text("Percentage");

  svg.append("g")
    .attr("class", "y axis axisRight")
    .attr("transform", "translate(0,0)")
    //.call(yAxisRight)
  .append("text")
    .attr("y", 6)
    .attr("dy", "-2em")
    .style("text-anchor", "end")
    .style("text-anchor", "end");
    //.text("Dollars");
  /*svg.append("g")
    .attr("class", "y axis axisRight")
    .attr("transform", "translate(" + (width) + ",0)")
    .call(yAxisRight)
  .append("text")
    .attr("y", 6)
    .attr("dy", "-2em")
    .attr("dx", "2em")
    .style("text-anchor", "end")
    .text("#");
  */
var LegendColor= [ ["percentage of black students in gifted program","#aad"],
                   ["percentage of black students in the school systems","#556"]];

var legend = svg.append("g")
    .attr("class", "legend")
    //.attr("x", width - 65)
    .attr("y", 50)
    .attr("height", 200)
    .attr("width", 300)
    .attr('transform', 'translate(-20,50)');

var legendRect = legend.selectAll('rect').data(LegendColor);  

legendRect.enter()
    .append("rect")
    .attr("x", width - 200)
    .attr("y", height)
    .attr("width", 20)
    .attr("height", 20);

legendRect
    .attr("y", function(d, i) {
        return i * 20;
    })
    .style("fill", function(d) {
        return d[1];
    });

var legendText = legend.selectAll('text').data(LegendColor);

legendText.enter()
    .append("text")
    .attr("x", width - 175);

legendText
    .attr("y", function(d, i) {
        return i * 20 + 15;
    })
    .text(function(d) {
        return d[0];
    });
             


var bars = svg.selectAll(".rect").data(data_2010)
  
      bars.enter()
      .append("rect")
      .attr("class", "rect1")
      .attr("x", function(d) { return x(d.SYSTEM_NAME); })
      .attr("width", x.rangeBand()/2)
      .attr("y", function(d) { return y0(d.gifted_total); })
      .attr("height", function(d,i,j) { return height - y0(d.gifted_total); })
      .on('mouseover', tip.show)
      .on('mouseout',tip.hide);

var bars1 = svg.selectAll(".rect").data(data_2010)
      
      bars1.enter()
      .append("rect")
      .attr("class", "rect2")
      .attr("x", function(d) { return x(d.SYSTEM_NAME) + x.rangeBand()/2; })
      .attr("width", x.rangeBand() / 2)
      .attr("y", function(d) { return y1(d.black_total); })
      .attr("height", function(d,i,j) { return height - y1(d.black_total); })
      .on('mouseover', tip1.show)
      .on('mouseout',tip1.hide);  

d3.selectAll("input").on("change",change);



var gap = "See the gap";
console.log("The current value of the button change" + gap);

var year = 2010;

function change(){
  console.log("The value of gap in change () " + gap);
  if (gap == "Comparison of percentages")
  {

    if (this.value === "2010") {gap_2010(); year  = 2010;}
    if (this.value === "2011") {gap_2011(); year  = 2011;}
    if (this.value === "2012") {gap_2012(); year  = 2012;}
    if (this.value === "2013") {gap_2013(); year  = 2013;}
  }
  else{
    
    if (this.value === "2010") {transition_2010();year  = 2010;}
    if (this.value === "2011") {transition_2011();year  = 2011;}
    if (this.value === "2012") {transition_2012();year  = 2012;}
    if (this.value === "2013") {transition_2013();year  = 2013;}

  }
  
  
  //console.log(gap);
}

function ButtonChange(bt){
   console.log(bt.value);
   if (bt.value == "Comparison of percentages"){ 
   bt.value ="See the gap";
   gap = "See the gap";
 }
   else {

    bt.value = "Comparison of percentages";
    gap = "Comparison of percentages";
  }
   if (bt.value == "Comparison of percentages") {

    if (year == "2010") gap_2010();
    if (year == "2011") gap_2011();
    if (year == "2012") gap_2012();
    if (year == "2013") gap_2013();
  }
   else {
    if (year == "2010") transition_2010();
    if (year == "2011") transition_2011();
    if (year == "2012") transition_2012();
    if (year == "2013") transition_2013();
  }
  console.log("This.value is from the ButtonChange" + year);
}



function transition_2011(){
  
  bars.data(data_2011)
      .enter()
      .append("rect")
      .attr("class", "rect1");

  console.log("does it really do the select things?")

  bars.transition() 
      .duration(1000)
      .delay(function(d,i){return i*10;})
      .ease("quad")   
      .attr("x", function(d) { return  x(d.SYSTEM_NAME); })
      .attr("width", x.rangeBand() / 2)
      .attr("y", function(d) { return y0(d.gifted_total); })
      .attr("height", function(d,i,j) { return height - y0(d.gifted_total); });
  
  bars1.data(data_2011)
      .enter()
      .append("rect")

  bars1.transition() 
      .duration(1000)
      .delay(function(d,i){return i*10;})
      .ease("quad")   
      .attr("x", function(d) { return x(d.SYSTEM_NAME) + x.rangeBand()/2; })
      .attr("width", x.rangeBand() / 2)
      .attr("y", function(d) { return y0(d.black_total); })
      .attr("height", function(d,i,j) { return height - y0(d.black_total); });   

  console.log("why not appear 2011?");
}

function transition_2010(){

  bars.data(data_2010)
      .enter()
      .append("rect")
      .attr("class", "rect1");

  bars.transition() 
      .duration(1000)
      .delay(function(d,i){return i*10;})
      .ease("quad")   
      .attr("x", function(d) { return x(d.SYSTEM_NAME) ; })
      .attr("width", x.rangeBand() / 2)
      .attr("y", function(d) { return y0(d.gifted_total); })
      .attr("height", function(d,i,j) { return height - y0(d.gifted_total); });
  
  bars1.data(data_2010)
      .enter()
      .append("rect")

  bars1.transition() 
      .duration(1000)
      .delay(function(d,i){return i*10;})
      .ease("quad")   
      .attr("x", function(d) { return x(d.SYSTEM_NAME) + x.rangeBand()/2; })
      .attr("width", x.rangeBand() / 2)
      .attr("y", function(d) { return y0(d.black_total); })
      .attr("height", function(d,i,j) { return height - y0(d.black_total); });
  
}

function transition_2012(){

  bars.data(data_2012)
      .enter()
      .append("rect")
      .attr("class", "rect1");

  bars.transition() 
      .duration(1000)
      .ease("quad")
      .delay(function(d,i){return i*10;})   
      .attr("x", function(d) { return x(d.SYSTEM_NAME) ; })
      .attr("width", x.rangeBand() / 2)
      .attr("y", function(d) { return y0(d.gifted_total); })
      .attr("height", function(d,i,j) { return height - y0(d.gifted_total); });
  
  bars1.data(data_2012)
      .enter()
      .append("rect")

  bars1.transition() 
      .duration(1000)
      .delay(function(d,i){return i*10;})
      .ease("quad")   
      .attr("x", function(d) { return x(d.SYSTEM_NAME) + x.rangeBand()/2; })
      .attr("width", x.rangeBand() / 2)
      .attr("y", function(d) { return y0(d.black_total); })
      .attr("height", function(d,i,j) { return height - y0(d.black_total); });
  
}

function transition_2013(){

  bars.data(data_2013)
      .enter()
      .append("rect")
      .attr("class", "rect1");

  bars.transition() 
      .duration(1000)
      .ease("quad")
      .delay(function(d,i){return i*10;})   
      .attr("x", function(d) { return x(d.SYSTEM_NAME) ; })
      .attr("width", x.rangeBand() / 2)
      .attr("y", function(d) { return y0(d.gifted_total); })
      .attr("height", function(d,i,j) { return height - y0(d.gifted_total); });
  
  bars1.data(data_2013)
      .enter()
      .append("rect")

  bars1.transition() 
      .duration(1000)
      .delay(function(d,i){return i*10;})
      .ease("quad")   
      .attr("x", function(d) { return x(d.SYSTEM_NAME) + x.rangeBand()/2; })
      .attr("width", x.rangeBand() / 2)
      .attr("y", function(d) { return y0(d.black_total); })
      .attr("height", function(d,i,j) { return height - y0(d.black_total); });
  
}

function gap_2010(){
  
  bars.exit()
      .remove();

  bars.data(data_2010)
      .enter()
      .append("rect")
      .attr("class", "rect1");

  bars.transition() 
      .duration(1000)
      .ease("quad")   
      .attr("x", function(d) { return x(d.SYSTEM_NAME) ; })
      .attr("width", x.rangeBand()/ 2  )
      .attr("y", function(d) { return y0(0); })
      .attr("height", function(d,i,j) { return height - y0(0); });
  
  bars1.data(data_2010)
      .enter()
      .append("rect")
      .on('mouseover', tip.show)
      .on('mouseout',tip.hide);

  bars1.transition() 
      .duration(1000)
      .delay(function(d,i){return i*10;})
      .ease("quad")   
      .attr("x", function(d) { return x(d.SYSTEM_NAME)  ; })
      .attr("width", x.rangeBand() )
      .attr("y", function(d) { return y0(d.black_total = d.black_total- d.gifted_total); })
      .attr("height", function(d,i,j) { return height - y0(d.black_total); });


}

function gap_2011(){
  bars.data(data_2011)
      .enter()
      .append("rect")
      .attr("class", "rect1");

  bars.transition() 
      .duration(1000)
      .ease("quad")   
      .attr("x", function(d) { return x(d.SYSTEM_NAME) ; })
      .attr("width", x.rangeBand() / 2)
      .attr("y", function(d) { return y0(0); })
      .attr("height", function(d,i,j) { return height - y0(0); });
  
  bars1.data(data_2011)
      .enter()
      .append("rect")

  bars1.transition() 
      .duration(1000)
      .delay(function(d,i){return i*10;})
      .ease("quad")   
      .attr("x", function(d) { return x(d.SYSTEM_NAME)  ; })
      .attr("width", x.rangeBand())
      .attr("y", function(d) { return y0(d.black_total = d.black_total - d.gifted_total); })
      .attr("height", function(d,i,j) { return height - y0(d.black_total); })
      .on('mouseover', tip2.show)
      .on('mouseout',tip2.hide);
}

function gap_2012(){
  bars.data(data_2012)
      .enter()
      .append("rect")
      .attr("class", "rect1");

  bars.transition() 
      .duration(1000)
      .ease("quad")   
      .attr("x", function(d) { return x(d.SYSTEM_NAME) ; })
      .attr("width", x.rangeBand() / 2)
      .attr("y", function(d) { return y0(0); })
      .attr("height", function(d,i,j) { return height - y0(0); })

  
  bars1.data(data_2012)
      .enter()
      .append("rect")

  bars1.transition() 
      .duration(1000)
      .delay(function(d,i){return i*10;})
      .ease("quad")   
      .attr("x", function(d) { return x(d.SYSTEM_NAME) ; })
      .attr("width", x.rangeBand() )
      .attr("y", function(d) { return y0(d.black_total = d.black_total - d.gifted_total); })
      .attr("height", function(d,i,j) { return height - y0(d.black_total); })
      .on('mouseover', tip2.show)
      .on('mouseout',tip2.hide);
}

function gap_2013(){
  bars.data(data_2013)
      .enter()
      .append("rect")
      .attr("class", "rect1");

  bars.transition() 
      .duration(1000)
      .ease("quad")   
      .attr("x", function(d) { return x(d.SYSTEM_NAME) ; })
      .attr("width", x.rangeBand() / 2)
      .attr("y", function(d) { return y0(0); })
      .attr("height", function(d,i,j) { return height - y0(0); })

  
  bars1.data(data_2013)
      .enter()
      .append("rect")

  bars1.transition() 
      .duration(1000)
      .delay(function(d,i){return i*10;})
      .ease("quad")   
      .attr("x", function(d) { return x(d.SYSTEM_NAME) ; })
      .attr("width", x.rangeBand() )
      .attr("y", function(d) { return y0(d.black_total = d.black_total - d.gifted_total); })
      .attr("height", function(d,i,j) { return height - y0(d.black_total); });

}



</script>

